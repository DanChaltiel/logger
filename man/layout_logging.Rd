% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layouts.R
\name{layout_logging}
\alias{layout_logging}
\title{Format a log record as the logging package does by default}
\usage{
layout_logging(level, msg, namespace = NA_character_,
  .call = sys.call(-1), .envir = parent.frame())
}
\arguments{
\item{level}{log level, see \code{\link{log_levels}} for more details}

\item{msg}{string message}

\item{namespace}{string referring to the \code{logger} environment / config to be used to override the target of the message record to be used instead of the default namespace, which is defined by the R package name from which the logger was called, and falls back to a common, global namespace.}

\item{.call}{R expression from which the logging function was called (optionally used by the logging layout)}

\item{.envir}{original frame of the \code{.call} calling function where the formatter function is to be evaluated and that is used to look up the \code{namespace} as well via \code{\link{topenv}}}
}
\value{
character vector
}
\description{
Format a log record as the logging package does by default
}
\examples{
\dontrun{
log_layout(layout_logging)
log_info(42)
log_info(42, namespace = 'everything')

devtools::load_all(system.file('demo-packages/logger-tester-package', package = 'logger'))
logger_tester_function(INFO, 42)
}
}
\seealso{
This is a \code{\link{log_layout}}, for alternatives, see \code{\link{layout_glue}}, \code{\link{layout_glue_colors}}, \code{\link{layout_json}}, or generator functions such as \code{\link{layout_glue_generator}}
}
